aliases:
  - &git_checkout
    run:
      name: Perform shallow clone and checkout
      command: |
        mkdir -p ~/.ssh && \
        echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config && \
        git config --global gc.auto 0 || true && \
        git clone --depth=1 -b $CIRCLE_BRANCH $CIRCLE_REPOSITORY_URL ./ && \
        git reset --hard $CIRCLE_SHA1
  - &replace_vars
    run:
      name: Replace vars
      command: bash pre_deployment.sh
  - &bundle_install
    name: Execute `bundle install`
    command: bundle install --path vendor/bundle
  - &restore_gem
    keys:
      - gem-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - gem-{{ arch }}-{{ .Branch }}-
  - &save_gem
    paths:
      - ./vendor/bundle
    key: gem-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
  - &restore_cocoapods
    keys:
      - cocoapods-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
  - &save_cocoapods
    paths:
      - ~/.cocoapods
      - Pods
    key: cocoapods-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
  - &install_cocoapods
    name: Install CocoaPods
    command: bundle exec pod install
  - &update_submodules
    name: Update submodules
    command: |
      git submodule init && \
      git submodule update
version: 2
jobs:
  build:
    macos:
      xcode: "11.4"
    steps:
      - *git_checkout
      - *replace_vars
      - restore_cache: *restore_gem
      - run: *bundle_install
      - save_cache: *save_gem
      - restore_cache: *restore_cocoapods
      - run: *install_cocoapods
      - save_cache: *save_cocoapods
      - run: *update_submodules
      - run:
          name: Build and run tests
          command: bundle exec fastlane scan
